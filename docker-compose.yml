version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NATS_URL=${NATS_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - db
      - nats
      - redis  
    volumes:
      - ./logs:/app/logs
    command: "uvicorn app.main:app --host ${APP_HOST} --port ${APP_PORT}"
    env_file:
      - .env  

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  nats:
    image: nats:2.9-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "-js -m 8222"
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 nc -z localhost 4222 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:  
    image: redis:7-alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes  
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]  
      interval: 5s
      timeout: 3s
      retries: 5

  worker: 
    build: .
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NATS_URL=${NATS_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - db
      - nats
      - redis 
    volumes:
      - ./logs:/app/logs
    command: "python -m app.worker"
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data: