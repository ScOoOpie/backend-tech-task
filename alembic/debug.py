# debug_alembic.py
import os
import sys
from sqlalchemy import create_engine, MetaData, inspect

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫–∞–∫ –≤ env.py
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(current_dir)
app_dir = os.path.join(project_root, 'app')

sys.path.insert(0, project_root)
sys.path.insert(0, app_dir)

print("üîç DIAGNOSTIC SCRIPT")
print(f"Current dir: {current_dir}")
print(f"Project root: {project_root}")
print(f"App dir: {app_dir}")
print(f"Files in app dir: {os.listdir(app_dir) if os.path.exists(app_dir) else 'NOT FOUND'}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
try:
    from app.models import Base
    print("‚úÖ SUCCESS: from app.models import Base")
    print(f"Tables in Base.metadata: {list(Base.metadata.tables.keys())}")
    print(f"Number of tables: {len(Base.metadata.tables)}")
except ImportError as e:
    print(f"‚ùå FAILED: from app.models import Base - {e}")


# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–æ–±—â–µ –≤ sys.path
print(f"\nüìÅ sys.path:")
for path in sys.path:
    print(f"  - {path}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
DATABASE_URL = "postgresql://event_user:secure_password_123@localhost:5433/events_db"
print(f"\nüîó Testing DB connection: {DATABASE_URL}")
try:
    engine = create_engine(DATABASE_URL)
    with engine.connect() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î
        inspector = inspect(engine)
        existing_tables = inspector.get_table_names()
        print(f"üìä Existing tables in DB: {existing_tables}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º metadata –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ
        metadata = MetaData()
        metadata.reflect(bind=engine)
        print(f"üìä Tables in reflected metadata: {list(metadata.tables.keys())}")
        
except Exception as e:
    print(f"‚ùå DB connection failed: {e}")