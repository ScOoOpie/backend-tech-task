# app/migrate.py
import os
import sys
import asyncio
import logging
from alembic.config import Config
from alembic import command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def run_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic"""
    try:
        logger.info("üöÄ Starting database migrations...")
        
        # –ü–æ–ª—É—á–∞–µ–º URL –ë–î –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        database_url = os.getenv("DATABASE_URL")
        if not database_url:
            logger.error("‚ùå DATABASE_URL environment variable is not set")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Alembic
        alembic_cfg = Config("alembic.ini")
        alembic_cfg.set_main_option("sqlalchemy.url", database_url)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        command.upgrade(alembic_cfg, "head")
        
        logger.info("‚úÖ Database migrations applied successfully")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Database migrations failed: {e}")
        return False

if __name__ == "__main__":
    success = run_migrations()
    sys.exit(0 if success else 1)